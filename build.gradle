plugins {
    id 'java'
    id 'antlr'
    id 'idea'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10-RC'
}

group 'com.euph28'

repositories {
    mavenCentral()
}

/* ---------- DEPENDENCIES ---------- */
dependencies {
    antlr "org.antlr:antlr4:4.9.3"
    implementation "org.antlr:antlr4-runtime:4.9.3"
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.github.ajalt.clikt:clikt:3.2.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

/* ---------- SOURCECODE SETTINGS ---------- */
sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java

clean{
    delete "generated-src"
}

idea {
    module {
        sourceDirs += file("generated-src/antlr/main/")
    }
}

/* ---------- UNIT TEST SETTINGS ---------- */
test {
    useJUnitPlatform()
    maxHeapSize = '1G'
}

/* ---------- JAVA SETTINGS ---------- */
compileJava{
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

jar {
    manifest {
        attributes 'Implementation-Version': version,
                'Main-Class': 'com.euph28.tson.runner.TSONRunnerCLIKt'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

/* ---------- KOTLIN SETTINGS ---------- */
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/* ---------- ANTLR4 ---------- */
generateGrammarSource {
    maxHeapSize = "128m"
    arguments += ['-package', 'com.euph28.tson.antlr', '-visitor']
    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/com/euph28/tson/antlr")
}
compileJava.dependsOn generateGrammarSource

/* ---------- RELEASE ---------- */
publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/euphonious28/tson"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}