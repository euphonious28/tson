# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Java CI with Gradle

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Gradle
        run: gradle build

  version:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    outputs:
      Version: ${{ steps.gitversion.outputs.majorMinorPatch }}
      VersionLong: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # requirement for GitVersion
      - name: GitVersion > Install
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: GitVersion > Get version
        uses: gittools/actions/gitversion/execute@v0.9.7
        id: gitversion
      - name: GitVersion > Log output
        run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

  publish:
    runs-on: ubuntu-latest
    needs: [build, version]
    if: github.ref == 'refs/head/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: GitVersion > Version details
        run: |
          echo "Version: ${{ needs.version.outputs.Version }}"
          echo "VersionLong: ${{ needs.version.outputs.VersionLong }}"
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Publish to GitHub Packages
        run: gradle -Pversion=${{ needs.version.outputs.VersionLong }} publish
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  tag:
    runs-on: ubuntu-latest
    needs: [version]
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: GitVersion > Version details
        run: |
          echo "Version: ${{ needs.version.outputs.Version }}"
          echo "VersionLong: ${{ needs.version.outputs.VersionLong }}"
      - name: Create Tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.version.outputs.Version }}',
              sha: context.sha
            })
